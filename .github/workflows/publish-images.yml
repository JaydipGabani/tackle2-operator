name: Publish Tackle 2 Operator Images

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
env:
  SUPPORTED_CHANNELS: ""
  REGISTRY: quay.io
  IMAGE_NAME: ${{ github.repository }}
  BUNDLE_SUFFIX: bundle
  CONTAINER_SUFFIX: container
  INDEX_SUFFIX: index
jobs:
  multiarch-operator:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: add checkout action...
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set container tags
        run: |
             if [ ${{ steps.extract_branch.outputs.branch }} == ${{ github.event.repository.default_branch }} ]; then
               echo "##[set-output name=tags;]$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CONTAINER_SUFFIX }}:${{ steps.extract_branch.outputs.branch }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CONTAINER_SUFFIX }}:latest)"
             else
               echo "##[set-output name=tags;]$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.CONTAINER_SUFFIX }}:${{ steps.extract_branch.outputs.branch }})"
             fi 
        id: set_container_tags

      - name: configure QEMU action...
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: configure Docker Buildx...
        id: docker_buildx
        uses: docker/setup-buildx-action@master

      - name: login to Quay.io...
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_PUBLISH_ROBOT }}
          password: ${{ secrets.QUAY_PUBLISH_TOKEN }}

      - name: build Multi-arch images...
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.docker_buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/ppc64le,linux/arm64,linux/s390x
          push: true
          tags: ${{ steps.set_container_tags.outputs.tags }}

      - name: Set bundle tags
        run: |
             if [ ${{ steps.extract_branch.outputs.branch }} == ${{ github.event.repository.default_branch }} ]; then
               echo "##[set-output name=tags;]$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.BUNDLE_SUFFIX }}:${{ steps.extract_branch.outputs.branch }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.BUNDLE_SUFFIX }}:latest)"
             else
               echo "##[set-output name=tags;]$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.BUNDLE_SUFFIX }}:${{ steps.extract_branch.outputs.branch }})"
             fi
        id: set_bundle_tags

      - name: build bundle
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.docker_buildx.outputs.name }}
          context: .
          file: ./bundle.Dockerfile
          push: true
          tags: ${{ steps.set_bundle_tags.outputs.tags }}

      - name: Get opm
        run: wget $(curl -s https://api.github.com/repos/operator-framework/operator-registry/releases/latest | grep 'browser_' | cut -d\" -f4 | grep linux) -O opm && chmod +x opm

      - name: Get latest bundle images
        run: |
          git fetch -q origin --unshallow
          BUNDLES=""
          for i in $(echo $SUPPORTED_CHANNELS | sed "s/,/ /g"); do
            BUNDLES=$(echo $BUNDLES,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.BUNDLE_SUFFIX }}:$(git branch -r --contains $i | tail -n 1 | cut -d '/' -f 2 ) | sed 's/^,//')
          done
          BUNDLES=$BUNDLES,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.BUNDLE_SUFFIX }}:latest
          echo "##[set-output name=bundles]$(echo $BUNDLES | sed 's/^,//')"
        id: get_bundles

      - name: Run OPM
        run: ./opm index add -c docker --bundles ${{ steps.get_bundles.outputs.bundles }} --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.INDEX_SUFFIX }}:${{ steps.extract_branch.outputs.branch }}

      - name: Push index
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.INDEX_SUFFIX }}:${{ steps.extract_branch.outputs.branch }}

      - name: Retag index image
        run: docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.INDEX_SUFFIX }}:${{ steps.extract_branch.outputs.branch }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.INDEX_SUFFIX }}:latest
        if: ${{ github.ref == github.event.repository.default_branch }}

      - name: push retagged index image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.INDEX_SUFFIX }}:latest
        if: ${{ github.ref == github.event.repository.default_branch }}
